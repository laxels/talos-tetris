export type Block = `L` | `S` | `J` | `I` | `Z` | `O` | `T`;

type Coord = [number, number];
type BlockCoords = [Coord, Coord, Coord, Coord];

export function getPossibleCoordsForBlock(b: Block): BlockCoords[] {
  switch (b) {
    case `L`:
      return [
        [
          [0, 0],
          [0, 1],
          [0, 2],
          [1, 2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [0, 1],
        ],
        [
          [0, 0],
          [1, 0],
          [1, 1],
          [1, 2],
        ],
        [
          [0, 0],
          [-2, 1],
          [-1, 1],
          [0, 1],
        ],
      ];
    case `S`:
      return [
        [
          [0, 0],
          [1, 0],
          [-1, 1],
          [0, 1],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 1],
          [1, 2],
        ],
      ];
    case `J`:
      return [
        [
          [0, 0],
          [0, 1],
          [-1, 2],
          [0, 2],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 1],
          [2, 1],
        ],
        [
          [0, 0],
          [1, 0],
          [0, 1],
          [0, 2],
        ],
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [2, 1],
        ],
      ];
    case `I`:
      return [
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [3, 0],
        ],
        [
          [0, 0],
          [0, 1],
          [0, 2],
          [0, 3],
        ],
      ];
    case `Z`:
      return [
        [
          [0, 0],
          [1, 0],
          [1, 1],
          [2, 1],
        ],
        [
          [0, 0],
          [-1, 1],
          [0, 1],
          [-1, 2],
        ],
      ];
    case `O`:
      return [
        [
          [0, 0],
          [1, 0],
          [0, 1],
          [1, 1],
        ],
      ];
    case `T`:
      return [
        [
          [0, 0],
          [1, 0],
          [2, 0],
          [1, 1],
        ],
        [
          [0, 0],
          [-1, 1],
          [0, 1],
          [0, 2],
        ],
        [
          [0, 0],
          [-1, 1],
          [0, 1],
          [1, 1],
        ],
        [
          [0, 0],
          [0, 1],
          [1, 1],
          [0, 2],
        ],
      ];
  }
}
